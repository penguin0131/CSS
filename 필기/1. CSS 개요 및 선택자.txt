@ CSS 란
-> Cascading Style Sheets의 약자 
-> 웹 문서의 전반적인 스타일을 미리 저장해 둔 스타일 시트 
-> 기존 HTML은 다양하게 설계하고 수시로 변경하는데 많은 제약이 따름 
	이를 보완하기 위해 만들어진 것이 스타일 시트 
-> 문서 작성 내용과 꾸미는 부분을 분리하여 내용을 수정하여도 디자인을 바꿀 필요가 없고, 
	디자인을 수정해도 글 내용을 바꿀 필요가 없어지게 만듦 

스타일 시트 기본 형식 
예) 
<style>
p{ text-align: center; } 
p		: 선택자 
text-align 	: style 속성 
center		: 속성 값  

※ CSS에서 가장 중요한 것은 선택자! 
선택자를 잘 쓸 줄 알아야지만 Front 개발자 입장에서 변경하고자 하는 것을 선택할 수 있음 
head태그에 하는 것이 일반적. 

@ 내부 스타일 시트 
-> <style></style>를 사용하여 내부에 스타일 정보를 저장하는 기법 
-> 내부에 스타일 시트를 정의하고 사용하게 됨(해당 페이지에서 계속 사용) 

예) 
<style>	
	p {text-align: center;}
</style> 

@ 외부 스타일 시트 -- 별도의 파일을 만들어서 그곳에서 가져다 씀 
-> <link> 태그를 이용하여 css파일을 읽어와서 스타일을 적용 
-> 외부에서 가져온 것이기 때문에 다른 페이지에서도 호출해서 사용 가능 

예) <link href="css파일경로" rel="stylesheet" type="text/css">

@ 인라인 스타일 시트 --재사용의 의미 없음 
-> 태그 내부에 스타일 정보를 지정하는 방법 
-> 해당 내부 태그에 정의한 것이기 때문에 해당 태그에만 적용 
예) <p style="color:pink"> 인라인 스타일 시트 적용 </p> 

@ CSS 선택자 
-> CSS에서는 선택자를 잘 쓰는 것이 CSS를 잘하게 되는 것 중 하나! 
선택자의 종류 

전체 선택자	: * 
태그 선택자	: 태그(h1,p,li 등등...)
아이디 선택자	: #아이디명 
클래스 선택자	: .클래스명 
후손 선택자	: 선택자 선택자 
자손 선택자	: 선택자 > 선택자

속성 선택자	: 선택자[속성=값]/선택자[속성~=값]
		  선택자[속성|=값]/선택자[속성^=값]
		  선택자[속성$=값]/선택자[속성*=값]			 

동위 선택자 	: 선택자 + 선택자 / 선택자 ~ 선택자 

구조 선택자 	: 선택자: first-child / 선택자: last-child
		  선택자: nth-child(수열) / 선택자: nth-last-child(수열)
		  선택자: first-of-type / 선택자: last-of-type
		  선택자: nth-of-type(수열) / 선택자: nth-last-of-type(수열) 

반응 선택자 	: 선택자: active / 선택자: hover

상태 선택자 	: :checked / :focus 

속성 선택자	: :enabled / : disabled 

링크 선택자	: :link	/ :visited 

문자 선택자 	: ::first-letter / :: first-line
		  ::after / ::before / ::selection
 
부정 선택자 	: 선택자:not(선택자) 

@ 전체 선택자 
-> html 문서 안에 있는 모든 태그에 적용되는 스타일 선택자 

기본 형식 
*{ 설정내용; } 
※ 전체 태그는 body 태그에 있는 요소 뿐만 아니라 html, head에도 적용이 됨 

예) * {color : red;} 

 
@ 태그 선택자 
-> 특정 태그에만 적용되는 스타일 선택자 

기본 형식 

태그명 {설정내용;}
※ 여러 개의 태그를 선택시에는 ','(쉼표)로 구별하여 작성 

예) p { color: red;}  

@ 아이디/클래스 선택자 
-> 아이디 선택자 : 태그 속성 id를 설정하고 id 값을 선택자로 쓰는 것(#) 
-> 클래스 선택자 : 태그 속성 class를 설정하고 class값을 선택자로 하는 것(.) 

기본 형식 
id	: #아이디명{설정내용;}
class	: .클래스명{설정내용;} 

※ 클래스 선택자는 중복을 허용하는 id 선택자는 중복 허용을 하지 않음 
코드상에서는 에러는 없지만 javascript의 DOM에서 id 값으로 페이지 요소를 가져오기 때문에 중복을 허용하지 않음 

※ 클래스는 중복을 허용하기 때문에 영역을 명확하게 하기 위해 태그 선택자와 같이 쓰는 경우도 있음 



3가지 값 <!--구분자-->  
name: 다른 페이지로 값을 넘길 때 사용하는 구분자(html에서 jsp로) 
id: 태그들끼리 구분하기 위한 구분자 고유해야함. 해당되는 페이지 안에서 태그들을 구분하기 위함.   
class: 그룹으로 묶어서 구분하기 위한 구분자 


@ 기본 속성 선택자
-> 태그 선택자와 함께 사용하는 선택자로 뒤에 []를 사용하여 속성과 속성값을 사용 

기본 형식 

선택자[속성] { 설정내용; }
선택자[속성=속성값] { 설정내용; }

@ 문자열 속성 선택자 
-> 특정 문자열을 확인하여 스타일을 적용하는 방식으로 특별한 경우에만 사용 
선택자[속성~=값]	: 속성값이 특정값을 단어로 포함하는 태그 선택(띄어쓰기로 구분) --있다면, 포함되었다c면~ 
선택자[속성|=값]	: 속성값이 특정값을 단어로 포함하는 태그 선택 "-"으로 구분 
			(-앞의 내용값이 동일해야 함) 
	-> name이든, class이든 선언시 -로 구성된 것이어야함 
 div[class|="positioning"]{
            height: 100px;
            width: 100px;
            border: 1px solid black;
            background-color: red;
            position: fixed;
        }
 <div class="positioning-fixed-area"></div>



선택자[속성^=값] 	: 속성값이 특정값으로 시작하는 태그 선택 
선택자[속성$=값] 	: 속성값이 특정값으로 끝나는 태그 선택 
선택자[속성*=값] 	: 속성값이 특정값으로 포함하는 태그 선택 

beautify- Ctrl Shift L -> 자동정렬 

@ 후손 선택자 / 자손 선택자 --많이 쓴다!! 아이 공부하니~ 
-> 후손은 내 아래 모든 것 
-> 자손은 내 직속 아래 

<body>
	<div>
		<h1></h1> 
		<h2></h2> 
		<ul>
			<li></li>
			<li></li>
		</ul> 
	</div>
</body>
-> div 입장에서는 h1,h2,ul 태그가 자손 태그 
-> div 입장에서 li 태그는 자손 태그는 아니지만 후손 태그라고 볼 수 있음 

사용법 

후손 선택자 
-> 선택자 후손선택자 { 설정내용; }

자손 선택자 
-> 선택자 > 자손선택자 { 설정내용; } 

※ 여러 개의 자손 선택 가능(선택자>자손>자손>자손...)  

@ 동위 선택자 
-> 동위 관계에서 뒤에서 위치한 태그를 선택할 때 사용 
동위선택자a+동위선택자b		: 동위선택자a의 바로 뒤에 있는 한 개의 선택자만 선택 
동위선택자a~동위선택자b		: 동위선택자a의 뒤에 있는 선택자 b 모두 선택

※ 같은 자손(형제)끼리는 동위 관계라고 볼 수 있음 

<div>
	<h1></h1> 
	<p></p>
	<p></p>
	<ul>
		<li></li>
		<li></li>
	</ul>
</div> 
		
@ 반응 선택자 
-> 사용자의 움직임에 따라 달라지는 선택자 

선택자: active 	->	사용자가 클릭한 태그 선택 
선택자: hover 	->	사용자의 마우스가 올라가 있는 태그 선택 

기본 형식 

선택자	: active { 설정내용; }
선택자	: hover  { 설정내용; }   


@ 상태 선택자 
-> 입력 양식의 상태에 따라 선택되는 선택자 

input 태그 	: checked -> 체크 상태의 input 태그 선택(체크가 되었다면!) 
input 태그	: focus -> 초점이 맞추어진 input 태그 선택  

option태그	: enabled -> 사용 가능한 option 태그 선택 
option태그	: disabled -> 사용 불가능한 option 태그 선택 

@ 일반 구조 선택자 
-> 특정한 위치에 있는 태그 선택(위치로만 구분)

:first-child		-> 형제 관계 태그 중 첫 번째 태그 선택 
:last-child		-> 형제 관계 태그 중 마지막 태그 선택 
:nth-child(수열)	-> 형제 관계 태그 중 앞에서 수열 번째 태그 선택 
:nth-last-child(수열)	-> 형제 관계 태그 중 뒤에서 수열 번째 태그 선택 

@ 형태 구조 선택자 
-> 특정한 위치에 있는 태그 선택 (태그별로 구분)

:first-of-type		-> 형제 관계 태그 중 첫 번째 태그 선택 
:last-of-type		-> 형제 관계 태그 중 마지막 태그 선택 
:nth-of-type(수열)	-> 형제 관계 태그 중 앞에서 수열 번째 태그 선택 
:nth-of-type(수열)	-> 형제 관계 태그 중 뒤에서 수열 번째 태그 선택 

@ 링크 선택자 
->링크(href)가 걸려있는 태그를 선택하는 선택자 
:link			-> 방문전(링크를 가기 전 상태) 링크 선택자
:visited 		->방문후(링크를 간 적 있는 상태) 링크 선택자	

@ 문자 선택자 
-> 태그 내부에서 특정 조건의 문자를 선택하는 선택자 

선택자:: first-letter 		-> 첫 번째 글자를 선택 
선택자:: first-line 		-> 첫 번째 줄을 선택 
선택자:: after			-> 태그 뒤에 위치하는 공간을 선택 -- 유용! 
선택자:: before			-> 태그 앞에 위치하는 공간을 선택 
선택자:: selection 		-> 사용자가 드래그한 글자 선택 

@ 부정 선택자 
-> 선택자를 제외한 나머지를 말함 

요소: not(선택자)

@ CSS 우선 순위 

## 적용 방법에 따른 우선 순위 ## 

스타일 태그 < class 스타일 < id 스타일 < 인라인 스타일 < !important

※ !important가 가장 높은 우선 순위를 가짐  

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>다혜의 홈페이지</title>
    <style>
        p{color:blueviolet;}--스타일태그
        .pp{color:crimson;}--class
        #p1{color:hotpink}--id스타일
    </style>
</head>
    
<body>
<p id="p1" class="pp" style="color:green">내용1</p>--인라인스타일

    
</body>
</html>

## 동일한 선택자 일시 우선 순위
-> 나중에 작성된 스타일이 최종 적용됨 
































































































































 

